version: '3.5'
services:
  interposed_func:
    build:
      context: .
      dockerfile: ./interposed_func/Dockerfile
    privileged: true

  cribl:
    build:
      context: .
      dockerfile: ./cribl/Dockerfile
    ports:
      - "9000:9000"

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile

  splunk:
    build:
      context: .
      dockerfile: ./splunk/Dockerfile
    ports:
      - "8000:8000"

    privileged: true

  elastic:
    build:
      context: .
      dockerfile: ./elastic/Dockerfile

  kafka:
    ports:                                                                                                                                                                              
      - "9092:9092"                                                                                                                                                                     
    environment:                                                                                                                                                                        
      KAFKA_BROKER_ID: 1                                                                                                                                                                
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'                                                                                                                                         
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT                                                                                                
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092                                                                                              
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter                                                                                                    
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1                                                                                                                                         
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0                                                                                                                                         
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092                                                                                                                        
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181                                                                                                                      
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1                                                                                                                                      
      CONFLUENT_METRICS_ENABLE: 'true'                                                                                                                                                  
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    build:
      context: .
      dockerfile: ./kafka/Dockerfile

  tls:
    build:
      context: .
      dockerfile: ./tls/Dockerfile

  detect_proto:
    build:
      context: detect_proto
    ports:
      - 6379:6379
      - 27017:27017

  go_8:
    build:
      context: .
      dockerfile: ./go/Dockerfile
      args:
        GO_IMAGE_VER: golang:1.8
  go_9:
    build:
      context: .
      dockerfile: ./go/Dockerfile
      args:
        GO_IMAGE_VER: golang:1.9
  go_10:
    build:
      context: .
      dockerfile: ./go/Dockerfile
      args:
        GO_IMAGE_VER: golang:1.10
  go_11:
    build:
      context: .
      dockerfile: ./go/Dockerfile
      args:
        GO_IMAGE_VER: golang:1.11
  go_12:
    build:
      context: .
      dockerfile: ./go/Dockerfile
      args:
        GO_IMAGE_VER: golang:1.12
  go_13:
    build:
      context: .
      dockerfile: ./go/Dockerfile
      args:
        GO_IMAGE_VER: golang:1.13
  go_14:
    build:
      context: .
      dockerfile: ./go/Dockerfile
      args:
        GO_IMAGE_VER: golang:1.14
  go_15:
    build:
      context: .
      dockerfile: ./go/Dockerfile
      args:
        GO_IMAGE_VER: golang:1.15

  java6:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: openjdk:6
        TOMCAT_MAJOR_VERSION: 7
        TOMCAT_MINOR_VERSION: 7.0.10

  java7:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: openjdk:7

  java8:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: openjdk:8
  
  java9:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: openjdk:9

  java10:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: openjdk:10

  java11:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: openjdk:11
  
  java12:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: openjdk:12

  java13:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: openjdk:13

  java14:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: openjdk:14

  oracle_java8:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: sgrio/java:jdk_8_ubuntu
        KEYTOOL: /usr/lib/jvm/java-8-oracle/bin/keytool

  oracle_java11:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: sgrio/java:jdk_11_ubuntu
        KEYTOOL: /usr/lib/jvm/java-11-oracle/bin/keytool

  oracle_java12:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: sgrio/java:jdk_12_ubuntu
        KEYTOOL: /usr/lib/jvm/java-12-oracle/bin/keytool

  oracle_java13:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: sgrio/java:jdk_13_ubuntu
        KEYTOOL: /usr/lib/jvm/java-13-oracle/bin/keytool

  oracle_java14:
    build:
      context: .
      dockerfile: ./java/Dockerfile
      args:
        JDK_IMAGE: sgrio/java:jdk_14_ubuntu
        KEYTOOL: /usr/lib/jvm/java-14-oracle/bin/keytool
