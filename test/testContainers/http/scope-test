#!/bin/bash

#set -x

URL=http://nghttp2.org/robots.txt

FAILED_TEST_LIST=""
FAILED_TEST_COUNT=0

starttest(){
    CURRENT_TEST=$1
    echo "=============================================="
    echo "             Testing $CURRENT_TEST            "
    echo "=============================================="
    ERR=0
}

endtest(){
    if [ $ERR -eq "0" ]; then
        RESULT=PASSED
    else
        RESULT=FAILED
        FAILED_TEST_LIST+=$CURRENT_TEST
        FAILED_TEST_LIST+=" "
        FAILED_TEST_COUNT=$(($FAILED_TEST_COUNT + 1))
    fi

    echo "******************* $RESULT *******************"
    echo ""
    echo ""
}




mkdir /tmp/out
/opt/cribl/bin/cribl start
sleep 5




#
# HTTP/1.1
#
starttest "HTTP/1.1"

rm -rf /tmp/out/appscope:in_appscope
scope run -c tcp://localhost:10090 -- curl -Lso /dev/null --http1.1 $URL
sleep 6

grep '"source":"http-req"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 0 ]; then
	echo "PASS: http-req found"
else
	echo "FAIL: http-req not found"
	ERR+=1
fi

grep '"source":"http-resp"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 0 ]; then
	echo "PASS: http-resp found"
else
	echo "FAIL: http-resp not found"
	ERR+=1
fi

endtest




#
# HTTP/1.1 + Payloads
#
starttest "HTTP/1.1 + Payloads"

rm -rf /tmp/out/appscope:in_appscope
scope run -p -c tcp://localhost:10090 -- curl -Lso /dev/null --http1.1 $URL
sleep 6

grep '"source":"http-req"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 0 ]; then
	echo "PASS: http-req found"
else
	echo "FAIL: http-req not found"
	ERR+=1
fi

grep '"source":"http-resp"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 0 ]; then
	echo "PASS: http-resp found"
else
	echo "FAIL: http-resp not found"
	ERR+=1
fi

endtest




#
# HTTP/2
#
starttest "HTTP/2"

rm -rf /tmp/out/appscope:in_appscope
scope run -c tcp://localhost:10090 -- curl -Lso /dev/null --http2-prior-knowledge $URL
sleep 6

grep '"source":"http-req"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 0 ]; then
	echo "PASS: http-req found"
else
	echo "FAIL: http-req not found"
	ERR+=1
fi

grep '"source":"http-resp"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 0 ]; then
	echo "PASS: http-resp found"
else
	echo "FAIL: http-resp not found"
	ERR+=1
fi

endtest




#
# HTTP/2 + Payloads
#
starttest "HTTP/2 + Payloads"

rm -rf /tmp/out/appscope:in_appscope
scope run -p -c tcp://localhost:10090 -- curl -Lso /dev/null --http2-prior-knowledge $URL
sleep 6

grep '"source":"http-req"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 0 ]; then
	echo "PASS: http-req found"
else
	echo "FAIL: http-req not found"
	ERR+=1
fi

grep '"source":"http-resp"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 0 ]; then
	echo "PASS: http-resp found"
else
	echo "FAIL: http-resp not found"
	ERR+=1
fi

endtest




#
# HTTP/2 with custom scope_protocol.yml
#
starttest "HTTP/2 with custom scope_protocol.yml"

rm -rf /tmp/out/appscope:in_appscope
SCOPE_HOME=/conf_1 LD_PRELOAD=lib/linux/libscope.so curl -Lso /dev/null --http2-prior-knowledge $URL
sleep 6

grep '"source":"http-req"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 1 ]; then
	echo "PASS: http-req not found"
else
	echo "FAIL: http-req found"
	ERR+=1
fi

grep '"source":"http-resp"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 1 ]; then
	echo "PASS: http-resp not found"
else
	echo "FAIL: http-resp found"
	ERR+=1
fi

endtest




#
# HTTP/2 with custom scope_protocol.yml
#
starttest "HTTP/2 with custom scope_protocol.yml"

rm -rf /tmp/out/appscope:in_appscope
SCOPE_HOME=/conf_2 LD_PRELOAD=lib/linux/libscope.so curl -Lso /dev/null --http2-prior-knowledge $URL
sleep 6

grep '"source":"http-req"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 1 ]; then
	echo "PASS: http-req not found"
else
	echo "FAIL: http-req found"
	ERR+=1
fi

grep '"source":"http-resp"' /tmp/out/appscope:in_appscope/CriblOut-*.json
if [ $? -eq 1 ]; then
	echo "PASS: http-resp not found"
else
	echo "FAIL: http-resp found"
	ERR+=1
fi

endtest




################# END TESTS ################# 

#
# Print test results
#
if (( $FAILED_TEST_COUNT == 0 )); then
    echo ""
    echo ""
    echo "************ ALL HTTP TESTS PASSED ************"
else
    echo "************ SOME HTTP TESTS FAILED ************"
    echo "Failed tests: $FAILED_TEST_LIST"
fi
echo ""

exit ${FAILED_TEST_COUNT}
